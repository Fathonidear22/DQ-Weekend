library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

#Menggunakan C5.0
drop_columns <- c("kpr_aktif", "pendapatan_setahun_juta", "risk_rating", "rata_rata_overdue")
datafeed <- dataCreditRating[ , !(names(dataCreditRating) %in% drop_columns)]
modelKu <- C5.0(datafeed, as.factor(dataCreditRating$risk_rating))
summary(modelKu)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> #Menggunakan C5.0
> drop_columns <- c("kpr_aktif", "pendapatan_setahun_juta", "risk_rating", "rata_rata_overdue")

> datafeed <- dataCreditRating[ , !(names(dataCreditRating) %in% drop_columns)]

> modelKu <- C5.0(datafeed, as.factor(dataCreditRating$risk_rating))

> summary(modelKu)

Call:
C5.0.default(x = datafeed, y = as.factor(dataCreditRating$risk_rating))


C5.0 [Release 2.07 GPL Edition]  	Wed Aug 26 02:52:02 2020
-------------------------------

Class specified by attribute `outcome'

Read 900 cases (4 attributes) from undefined.data

Decision tree:

jumlah_tanggungan > 4:
:...durasi_pinjaman_bulan <= 24: 4 (112/30)
:   durasi_pinjaman_bulan > 24: 5 (140/55)
jumlah_tanggungan <= 4:
:...jumlah_tanggungan > 2: 3 (246/22)
    jumlah_tanggungan <= 2:
    :...durasi_pinjaman_bulan <= 36: 1 (294/86)
        durasi_pinjaman_bulan > 36:
        :...jumlah_tanggungan <= 0: 2 (41/8)
            jumlah_tanggungan > 0: 3 (67/4)


Evaluation on training data (900 cases):

	    Decision Tree   
	  ----------------  
	  Size      Errors  

	     6  205(22.8%)   <<


	   (a)   (b)   (c)   (d)   (e)    <-classified as
	  ----  ----  ----  ----  ----
	   208     2     5     6     6    (a): class 1
	    86    33    21     6    13    (b): class 2
	           4   287                (c): class 3
	           2          82    36    (d): class 4
	                      18    85    (e): class 5


	Attribute usage:

	100.00%	jumlah_tanggungan
	 72.67%	durasi_pinjaman_bulan


Time: 0.0 secs 

library("openxlsx")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")
str(dataCreditRating)

#Melakukan konversi kolom risk_rating menjadi factor
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 


#Melihat struktur setelah konversi
str(dataCreditRating)

> library("openxlsx")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> str(dataCreditRating)
'data.frame':	900 obs. of  7 variables:
 $ kode_kontrak           : chr  "AGR-000001" "AGR-000011" "AGR-000030" "AGR-000043" ...
 $ pendapatan_setahun_juta: num  295 271 159 210 165 220 70 88 163 100 ...
 $ kpr_aktif              : chr  "YA" "YA" "TIDAK" "YA" ...
 $ durasi_pinjaman_bulan  : num  48 36 12 12 36 24 36 48 48 36 ...
 $ jumlah_tanggungan      : num  5 5 0 3 0 5 3 3 5 6 ...
 $ rata_rata_overdue      : chr  "61 - 90 days" "61 - 90 days" "0 - 30 days" "46 - 60 days" ...
 $ risk_rating            : num  4 4 1 3 2 1 2 2 2 2 ...

> #Melakukan konversi kolom risk_rating menjadi factor
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> #Melihat struktur setelah konversi
> str(dataCreditRating)
'data.frame':	900 obs. of  7 variables:
 $ kode_kontrak           : chr  "AGR-000001" "AGR-000011" "AGR-000030" "AGR-000043" ...
 $ pendapatan_setahun_juta: num  295 271 159 210 165 220 70 88 163 100 ...
 $ kpr_aktif              : chr  "YA" "YA" "TIDAK" "YA" ...
 $ durasi_pinjaman_bulan  : num  48 36 12 12 36 24 36 48 48 36 ...
 $ jumlah_tanggungan      : num  5 5 0 3 0 5 3 3 5 6 ...
 $ rata_rata_overdue      : chr  "61 - 90 days" "61 - 90 days" "0 - 30 days" "46 - 60 days" ...
 $ risk_rating            : Factor w/ 5 levels "1","2","3","4",..: 4 4 1 3 2 1 2 2 2 2 ...
 
 library("openxlsx")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Merubah tipe data class variable sebagai factor 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
str(dataCreditRating)

#Menghilangkan beberapa variable input dari dataset 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]
str(datafeed)

> library("openxlsx")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Merubah tipe data class variable sebagai factor 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> str(dataCreditRating)
'data.frame':	900 obs. of  7 variables:
 $ kode_kontrak           : chr  "AGR-000001" "AGR-000011" "AGR-000030" "AGR-000043" ...
 $ pendapatan_setahun_juta: num  295 271 159 210 165 220 70 88 163 100 ...
 $ kpr_aktif              : chr  "YA" "YA" "TIDAK" "YA" ...
 $ durasi_pinjaman_bulan  : num  48 36 12 12 36 24 36 48 48 36 ...
 $ jumlah_tanggungan      : num  5 5 0 3 0 5 3 3 5 6 ...
 $ rata_rata_overdue      : chr  "61 - 90 days" "61 - 90 days" "0 - 30 days" "46 - 60 days" ...
 $ risk_rating            : Factor w/ 5 levels "1","2","3","4",..: 4 4 1 3 2 1 2 2 2 2 ...

> #Menghilangkan beberapa variable input dari dataset 
> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> str(datafeed)
'data.frame':	900 obs. of  2 variables:
 $ durasi_pinjaman_bulan: num  48 36 12 12 36 24 36 48 48 36 ...
 $ jumlah_tanggungan    : num  5 5 0 3 0 5 3 3 5 6 ...
 
 library("openxlsx")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan porsi index acak untuk training dan testing set
set.seed(100)
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

str(input_training_set)
str(class_training_set)
str(input_testing_set)

> library("openxlsx")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan porsi index acak untuk training dan testing set
> set.seed(100)

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> str(input_training_set)
'data.frame':	800 obs. of  2 variables:
 $ durasi_pinjaman_bulan: num  36 24 12 36 48 24 24 36 24 12 ...
 $ jumlah_tanggungan    : num  2 0 3 4 6 4 3 2 1 4 ...

> str(class_training_set)
 Factor w/ 5 levels "1","2","3","4",..: 2 1 3 2 5 3 3 2 2 3 ...

> str(input_testing_set)
'data.frame':	100 obs. of  2 variables:
 $ durasi_pinjaman_bulan: num  12 48 24 12 36 24 24 48 36 12 ...
 $ jumlah_tanggungan    : num  0 3 5 0 5 5 5 0 2 4 ...
 
 library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set)
summary(risk_rating_model)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan dan menampilkan summary model
> risk_rating_model <- C5.0(input_training_set, class_training_set)

> summary(risk_rating_model)

Call:
C5.0.default(x = input_training_set, y = class_training_set)


C5.0 [Release 2.07 GPL Edition]  	Wed Aug 26 03:00:11 2020
-------------------------------

Class specified by attribute `outcome'

Read 800 cases (3 attributes) from undefined.data

Decision tree:

jumlah_tanggungan > 4:
:...durasi_pinjaman_bulan <= 24: 4 (98/25)
:   durasi_pinjaman_bulan > 24: 5 (129/49)
jumlah_tanggungan <= 4:
:...jumlah_tanggungan > 2: 3 (219/17)
    jumlah_tanggungan <= 2:
    :...durasi_pinjaman_bulan <= 36: 1 (259/80)
        durasi_pinjaman_bulan > 36:
        :...jumlah_tanggungan <= 0: 2 (37/7)
            jumlah_tanggungan > 0: 3 (58/2)


Evaluation on training data (800 cases):

	    Decision Tree   
	  ----------------  
	  Size      Errors  

	     6  180(22.5%)   <<


	   (a)   (b)   (c)   (d)   (e)    <-classified as
	  ----  ----  ----  ----  ----
	   179     1     5     5     6    (a): class 1
	    80    30    14     3    12    (b): class 2
	           4   258                (c): class 3
	           2          73    31    (d): class 4
	                      17    80    (e): class 5


	Attribute usage:

	100.00%	jumlah_tanggungan
	 72.62%	durasi_pinjaman_bulan


Time: 0.0 secs 

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set)
plot(risk_rating_model)

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set)
plot(risk_rating_model)

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))
summary(risk_rating_model)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> summary(risk_rating_model)

Call:
C5.0.default(x = input_training_set, y = class_training_set, control
 = C5.0Control(label = "Risk Rating"))


C5.0 [Release 2.07 GPL Edition]  	Wed Aug 26 03:04:09 2020
-------------------------------

Class specified by attribute `Risk Rating'

Read 800 cases (3 attributes) from undefined.data

Decision tree:

jumlah_tanggungan > 4:
:...durasi_pinjaman_bulan <= 24: 4 (98/25)
:   durasi_pinjaman_bulan > 24: 5 (129/49)
jumlah_tanggungan <= 4:
:...jumlah_tanggungan > 2: 3 (219/17)
    jumlah_tanggungan <= 2:
    :...durasi_pinjaman_bulan <= 36: 1 (259/80)
        durasi_pinjaman_bulan > 36:
        :...jumlah_tanggungan <= 0: 2 (37/7)
            jumlah_tanggungan > 0: 3 (58/2)


Evaluation on training data (800 cases):

	    Decision Tree   
	  ----------------  
	  Size      Errors  

	     6  180(22.5%)   <<


	   (a)   (b)   (c)   (d)   (e)    <-classified as
	  ----  ----  ----  ----  ----
	   179     1     5     5     6    (a): class 1
	    80    30    14     3    12    (b): class 2
	           4   258                (c): class 3
	           2          73    31    (d): class 4
	                      17    80    (e): class 5


	Attribute usage:

	100.00%	jumlah_tanggungan
	 72.62%	durasi_pinjaman_bulan


Time: 0.0 secs

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan","kpr_aktif")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 780)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))
summary(risk_rating_model)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan","kpr_aktif")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 780)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> summary(risk_rating_model)

Call:
C5.0.default(x = input_training_set, y = class_training_set, control
 = C5.0Control(label = "Risk Rating"))


C5.0 [Release 2.07 GPL Edition]  	Wed Aug 26 03:05:00 2020
-------------------------------

Class specified by attribute `Risk Rating'

Read 780 cases (4 attributes) from undefined.data

Decision tree:

kpr_aktif = TIDAK:
:...durasi_pinjaman_bulan <= 24: 1 (189/45)
:   durasi_pinjaman_bulan > 24: 2 (136/47)
kpr_aktif = YA:
:...jumlah_tanggungan <= 4: 3 (259/4)
    jumlah_tanggungan > 4:
    :...durasi_pinjaman_bulan <= 24: 4 (87/15)
        durasi_pinjaman_bulan > 24: 5 (109/31)


Evaluation on training data (780 cases):

	    Decision Tree   
	  ----------------  
	  Size      Errors  

	     5  142(18.2%)   <<


	   (a)   (b)   (c)   (d)   (e)    <-classified as
	  ----  ----  ----  ----  ----
	   144    44     2                (a): class 1
	    44    89                 1    (b): class 2
	           2   255                (c): class 3
	                 2    72    30    (d): class 4
	     1     1          15    78    (e): class 5


	Attribute usage:

	100.00%	kpr_aktif
	 66.79%	durasi_pinjaman_bulan
	 58.33%	jumlah_tanggungan


Time: 0.0 secs 

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating[dataCreditRating$risk_rating == "1"]  <-  "satu"
dataCreditRating$risk_rating[dataCreditRating$risk_rating == "2"]  <-  "dua"
dataCreditRating$risk_rating[dataCreditRating$risk_rating == "3"]  <-  "tiga"
dataCreditRating$risk_rating[dataCreditRating$risk_rating == "4"]  <-  "empat"
dataCreditRating$risk_rating[dataCreditRating$risk_rating == "5"]  <-  "lima"
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))
summary(risk_rating_model)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating[dataCreditRating$risk_rating == "1"]  <-  "satu"

> dataCreditRating$risk_rating[dataCreditRating$risk_rating == "2"]  <-  "dua"

> dataCreditRating$risk_rating[dataCreditRating$risk_rating == "3"]  <-  "tiga"

> dataCreditRating$risk_rating[dataCreditRating$risk_rating == "4"]  <-  "empat"

> dataCreditRating$risk_rating[dataCreditRating$risk_rating == "5"]  <-  "lima"

> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> summary(risk_rating_model)

Call:
C5.0.default(x = input_training_set, y = class_training_set, control
 = C5.0Control(label = "Risk Rating"))


C5.0 [Release 2.07 GPL Edition]  	Wed Aug 26 03:09:47 2020
-------------------------------

Class specified by attribute `Risk Rating'

Read 800 cases (3 attributes) from undefined.data

Decision tree:

jumlah_tanggungan > 4:
:...durasi_pinjaman_bulan <= 24: empat (98/25)
:   durasi_pinjaman_bulan > 24: lima (129/49)
jumlah_tanggungan <= 4:
:...jumlah_tanggungan > 2: tiga (219/17)
    jumlah_tanggungan <= 2:
    :...durasi_pinjaman_bulan <= 36: satu (259/80)
        durasi_pinjaman_bulan > 36:
        :...jumlah_tanggungan <= 0: dua (37/7)
            jumlah_tanggungan > 0: tiga (58/2)


Evaluation on training data (800 cases):

	    Decision Tree   
	  ----------------  
	  Size      Errors  

	     6  180(22.5%)   <<


	   (a)   (b)   (c)   (d)   (e)    <-classified as
	  ----  ----  ----  ----  ----
	    30     3    12    80    14    (a): class dua
	     2    73    31                (b): class empat
	          17    80                (c): class lima
	     1     5     6   179     5    (d): class satu
	     4                     258    (e): class tiga


	Attribute usage:

	100.00%	jumlah_tanggungan
	 72.62%	durasi_pinjaman_bulan


Time: 0.0 secs

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

#menggunakan model untuk prediksi testing set
predict(risk_rating_model, input_testing_set)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> #menggunakan model untuk prediksi testing set
> predict(risk_rating_model, input_testing_set)
  [1] 1 3 4 1 5 4 4 2 1 3 3 1 3 3 3 4 3 1 1 3 5 3 5 1 4 4 1 3 3 1 2 3 3 1 3 5 3
 [38] 3 3 1 3 3 5 1 5 1 5 1 3 3 4 1 3 1 1 3 1 1 1 5 1 1 3 3 3 1 3 4 1 3 3 3 1 3
 [75] 4 3 2 1 3 1 5 5 1 1 4 4 3 2 4 1 1 4 1 3 1 1 1 5 4 3
Levels: 1 2 3 4 5

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

#menyimpan hasil prediksi testing set ke dalam kolom hasil_prediksi
input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating
input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

#menampilkan variable input_testing_set
print(input_testing_set)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> #menyimpan hasil prediksi testing set ke dalam kolom hasil_prediksi
> input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating

> input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

> #menampilkan variable input_testing_set
> print(input_testing_set)
    durasi_pinjaman_bulan jumlah_tanggungan risk_rating hasil_prediksi
3                      12                 0           1              1
8                      48                 3           2              3
21                     24                 5           2              4
26                     12                 0           1              1
28                     36                 5           2              5
37                     24                 5           2              4
39                     24                 5           1              4
45                     48                 0           1              2
49                     36                 2           1              1
53                     12                 4           2              3
54                     48                 1           2              3
58                     12                 0           1              1
60                     48                 3           2              3
61                     48                 2           2              3
62                     24                 4           2              3
65                     24                 5           2              4
75                     24                 3           2              3
97                     12                 0           1              1
112                    12                 0           1              1
117                    24                 3           3              3
123                    36                 6           4              5
125                    36                 4           3              3
128                    36                 6           4              5
162                    12                 0           1              1
166                    24                 6           4              4
187                    12                 6           5              4
192                    36                 1           1              1
198                    12                 3           3              3
219                    48                 2           3              3
221                    36                 1           1              1
239                    48                 0           2              2
250                    24                 4           3              3
255                    48                 1           3              3
276                    36                 1           1              1
284                    24                 4           3              3
287                    36                 6           5              5
291                    24                 4           3              3
323                    48                 4           3              3
329                    48                 1           3              3
335                    24                 0           1              1
336                    48                 2           3              3
338                    36                 3           3              3
345                    36                 5           4              5
348                    24                 0           1              1
350                    48                 6           5              5
356                    36                 2           2              1
386                    48                 5           4              5
398                    12                 1           1              1
406                    36                 4           3              3
416                    24                 3           3              3
434                    12                 6           4              4
460                    12                 1           1              1
466                    48                 1           3              3
514                    36                 2           1              1
520                    24                 1           2              1
526                    24                 3           3              3
532                    36                 1           1              1
539                    36                 2           2              1
541                    24                 1           1              1
548                    48                 6           5              5
560                    24                 1           1              1
564                    24                 1           1              1
568                    48                 3           3              3
570                    48                 4           3              3
572                    24                 4           3              3
584                    36                 2           1              1
585                    36                 4           3              3
587                    12                 6           4              4
588                    12                 2           1              1
646                    48                 1           3              3
660                    36                 4           3              3
665                    12                 4           3              3
666                    36                 0           2              1
673                    48                 3           3              3
677                    24                 5           4              4
678                    48                 4           3              3
679                    48                 0           2              2
681                    36                 1           1              1
684                    48                 2           3              3
687                    12                 2           1              1
701                    48                 5           4              5
704                    48                 6           5              5
707                    12                 2           1              1
708                    12                 2           1              1
716                    12                 5           4              4
732                    24                 6           4              4
734                    24                 3           3              3
767                    48                 0           2              2
776                    12                 6           4              4
781                    24                 2           1              1
782                    24                 2           1              1
790                    12                 6           4              4
813                    24                 2           1              1
839                    24                 4           3              3
842                    36                 0           2              1
845                    24                 2           2              1
853                    24                 2           1              1
861                    48                 5           5              5
862                    12                 6           4              4
870                    48                 3           3              3

library("openxlsx")
library("C50")
library("reshape2")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

#menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating
input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

#membuat confusion matrix
dcast(hasil_prediksi ~ risk_rating, data=input_testing_set)

> library("openxlsx")

> library("C50")

> library("reshape2")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> #menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
> input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating

> input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

> #membuat confusion matrix
> dcast(hasil_prediksi ~ risk_rating, data=input_testing_set)
  hasil_prediksi  1 2  3 4 5
1              1 29 6  0 0 0
2              2  1 3  0 0 0
3              3  0 7 29 0 0
4              4  1 3  0 9 1
5              5  0 1  0 5 5

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

#menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating
input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

#Menghitung jumlah prediksi yang benar
nrow(input_testing_set[input_testing_set$risk_rating==input_testing_set$hasil_prediksi,])

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> #menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
> input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating

> input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

> #Menghitung jumlah prediksi yang benar
> nrow(input_testing_set[input_testing_set$risk_rating==input_testing_set$hasil_prediksi,])
[1] 75

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan model
risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

#menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating
input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

#Menghitung jumlah prediksi yang salah
nrow(input_testing_set[input_testing_set$risk_rating!=input_testing_set$hasil_prediksi,])

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan model
> risk_rating_model <- C5.0(input_training_set, class_training_set, control = C5.0Control(label="Risk Rating"))

> #menyimpan risk_rating dari data awal dan hasil prediksi testing set ke dalam kolom hasil_prediksi
> input_testing_set$risk_rating <- dataCreditRating[-indeks_training_set,]$risk_rating

> input_testing_set$hasil_prediksi <- predict(risk_rating_model, input_testing_set)

> #Menghitung jumlah prediksi yang salah
> nrow(input_testing_set[input_testing_set$risk_rating!=input_testing_set$hasil_prediksi,])
[1] 25

#Membuat data frame aplikasi baru
aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 12)
print(aplikasi_baru)

> #Membuat data frame aplikasi baru
> aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 12)

> print(aplikasi_baru)
  jumlah_tanggungan durasi_pinjaman_bulan
1                 6                    12

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set)

#Membuat data frame aplikasi baru
aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 12)

#melakukan prediksi
predict(risk_rating_model, aplikasi_baru)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan dan menampilkan summary model
> risk_rating_model <- C5.0(input_training_set, class_training_set)

> #Membuat data frame aplikasi baru
> aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 12)

> #melakukan prediksi
> predict(risk_rating_model, aplikasi_baru)
[1] 4
Levels: 1 2 3 4 5

library("openxlsx")
library("C50")

#Mempersiapkan data
dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

#Mempersiapkan class dan input variables 
dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 
input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")
datafeed <- dataCreditRating[ , input_columns ]

#Mempersiapkan training dan testing set
set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer
indeks_training_set <- sample(900, 800)

#Membuat dan menampilkan training set dan testing set
input_training_set <- datafeed[indeks_training_set,]
class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating
input_testing_set <- datafeed[-indeks_training_set,]

#menghasilkan dan menampilkan summary model
risk_rating_model <- C5.0(input_training_set, class_training_set)

#Membuat data frame aplikasi baru
aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 64)

#melakukan prediksi
predict(risk_rating_model, aplikasi_baru)

> library("openxlsx")

> library("C50")

> #Mempersiapkan data
> dataCreditRating <- read.xlsx(xlsxFile = "https://academy.dqlab.id/dataset/credit_scoring_dqlab.xlsx")

> #Mempersiapkan class dan input variables 
> dataCreditRating$risk_rating <- as.factor(dataCreditRating$risk_rating) 

> input_columns <- c("durasi_pinjaman_bulan", "jumlah_tanggungan")

> datafeed <- dataCreditRating[ , input_columns ]

> #Mempersiapkan training dan testing set
> set.seed(100) #untuk menyeragamkan hasil random antar tiap komputer

> indeks_training_set <- sample(900, 800)

> #Membuat dan menampilkan training set dan testing set
> input_training_set <- datafeed[indeks_training_set,]

> class_training_set <- dataCreditRating[indeks_training_set,]$risk_rating

> input_testing_set <- datafeed[-indeks_training_set,]

> #menghasilkan dan menampilkan summary model
> risk_rating_model <- C5.0(input_training_set, class_training_set)

> #Membuat data frame aplikasi baru
> aplikasi_baru <- data.frame(jumlah_tanggungan = 6, durasi_pinjaman_bulan = 64)

> #melakukan prediksi
> predict(risk_rating_model, aplikasi_baru)
[1] 5
Levels: 1 2 3 4 5 



